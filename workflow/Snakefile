# Snakemake workflow

import os

configfile: "config/config.yaml"

include: "rules/simulations.smk"
include: "rules/analyses.smk"

# variant_models = {
# 	'A': 'resources/model_europe.yaml',
# 	'B': 'resources/model_europe_noEHGpulse.yaml',
# }

scenarios = [
	"2A",
	"3A",
	# "2B",
	# "2C",
	# "3B",
]

rule all:
	input:
		expand("results/simulations/sim_msprime_scenario_{sc}.trees", sc=scenarios),
		expand("results/simulations/sim_slim_sel_scenario_{sc}.trees", sc=scenarios),
		# Europe
		rules.sim_msprime_simple_3pop_Patterson_like.output,
		# expand('results/figures/sim_eu_{variant}_admix.png', variant=['A', 'B']),
		
		expand('results/figures/sim_msprime_scenario_{sc}.pdf', sc=scenarios),
		expand(
			'results/figures/sim_slim_sel_scenario_{sc}_{change_type}.pdf',
			sc=scenarios, change_type=['jump', 'gradual'],
		),

rule prepare_scenarios:
	output:
		expand("results/simulations/scenario_{sc}.yaml", sc=scenarios),
		expand("results/simulations/scenario_{sc}.json", sc=scenarios),
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/scenarios.py"
