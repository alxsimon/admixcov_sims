# Snakemake workflow

import os

configfile: "config/config.yaml"

include: "rules/simulations.smk"
include: "rules/analyses.smk"

rule all:
	input:
		expand("results/simulations/scenario_{sc}.{ext}", sc=config['scenarios'], ext=['yaml', 'json', 'svg']),
		expand('results/figures/fig_sim_msprime_scenario_{sc}.pdf', sc=config['scenarios']),
		expand(
			'results/figures/fig_sim_slim_sel_scenario_{sc}_{shift_type}_t{time}_s{ssize}.pdf',
			sc=config['scenarios'],
			shift_type=['gradual'],
			time=config['shift_time'],
			ssize=config['shift_size'],
		),
		"results/figures/fig_sim_main.pdf",
		'results/figures/fig_sim_msprime_europe_uk.pdf',
		"results/figures/fig_sim_sel_2A_intervals_rec.pdf",
		expand(
			'results/simulations/sim_slim_sel_inter_{sc}_{shift_type}_t{time}_s{ssize}_r{rec}_i{inter}.pickle',
			sc=config['scenarios'],
			shift_type=['gradual'],
			time=config['shift_time'],
			ssize=config['shift_size'],
			rec=config['rec'],
			inter=config['intervals'],
		),
		expand(
			'results/simulations/sim_msprime_inter_{sc}_r{rec}_i{inter}.pickle',
			# sc=config['scenarios'],
			sc=['2A', '2NGF'],
			rec=config['rec'],
			inter=config['intervals'],
		),
		expand(
			'results/simulations/sim_slim_bgs_scenario_{sc}_r{rec}.pickle',
			sc=config['scenarios'],
			rec=config['rec'],
		),
		expand(
			'results/figures/fig_sim_slim_bgs_scenario_{sc}_r{rec}.pdf',
			sc=config['scenarios'],
			rec=config['rec'],
		)

rule prepare_scenarios:
	output:
		"results/simulations/scenario_{sc}.yaml",
		"results/simulations/scenario_{sc}.json",
		"results/simulations/scenario_{sc}.svg",
	params:
		outdir = lambda w, output: os.path.dirname(output[0]),
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/prep_scenario.py"

rule main_figure:
	input:
		sim_neutral = 'results/simulations/sim_msprime_scenario_2A.pickle',
		sim_sel = 'results/simulations/sim_slim_sel_scenario_2A_gradual_t140_s3.0.pickle',
	output:
		fig = "results/figures/fig_sim_main.pdf",
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/main_figure.py"

rule figure_intervals_rec:
	input:
		expand(
			'results/simulations/sim_msprime_inter_2A_r{rec}_i{inter}.pickle',
			rec=config['rec'],
			inter=config['intervals'],
		),
	output:
		fig = "results/figures/fig_sim_sel_2A_intervals_rec.pdf"
	params:
		prefix = "results/simulations/sim_slim_sel_inter_2A_gradual_t140_s3.0",
		rec = config['rec'],
		intervals = config['intervals'],
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/plot_variable_intervals_rec.py"