# Snakemake workflow

import os

configfile: "config/config.yaml"

include: "rules/simulations.smk"
include: "rules/analyses.smk"

rule all:
	input:
		expand(
			"results/simulations/sim_msprime_rep/sim_msprime_scenario_{sc}_{rep}.trees",
			sc=config['scenarios'], rep=range(config['N_rep'])
		),
		expand(
			"results/simulations/sim_slim_sel_rep/sim_slim_sel_scenario_{sc}_{shift_type}_t{time}_s{ssize}_{rep}.trees",
			sc=config['scenarios'],
			shift_type=['gradual', 'jump'],
			time=[140, 80],
			ssize=[2.0, 4.0],
			rep=range(config['N_rep']),
		),
		# Europe
		# rules.sim_msprime_simple_3pop_Patterson_like.output,
		# expand('results/figures/sim_eu_{variant}_admix.png', variant=['A', 'B']),
		expand('results/figures/sim_msprime_scenario_{sc}.pdf', sc=config['scenarios']),
		expand(
			'results/figures/sim_slim_sel_scenario_{sc}_{shift_type}_t{time}_s{ssize}.pdf',
			sc=config['scenarios'],
			shift_type=['gradual', 'jump'],
			time=[140, 80],
			ssize=[2.0, 4.0],
		),
		"results/figures/sim_main_figure.pdf",

rule prepare_scenarios:
	output:
		expand("results/simulations/scenario_{sc}.yaml", sc=config['scenarios']),
		expand("results/simulations/scenario_{sc}.json", sc=config['scenarios']),
		expand("results/simulations/scenario_{sc}.svg", sc=config['scenarios']),
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/scenarios.py"

rule paper_figure:
	input:
		sim_neutral = 'results/simulations/sim_msprime_scenario_2A.pickle',
		sim_sel = 'results/simulations/sim_slim_sel_scenario_2A_jump_t140_s2.0.pickle',
	output:
		fig = "results/figures/sim_main_figure.pdf",
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/main_figure.py"