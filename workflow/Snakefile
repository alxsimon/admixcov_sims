# Snakemake workflow

configfile: "config/config.yaml"

include: "rules/simulations.smk"
include: "rules/analyses.smk"

# variant_models = {
# 	'A': 'resources/model_europe.yaml',
# 	'B': 'resources/model_europe_noEHGpulse.yaml',
# }

rule all:
	input:
		expand("results/simulations/sim_scenario_{sc}.trees", sc=["2A", "2B", "2C", "3A", "3B"]),
		expand("results/analyses/data_scenario_{sc}.pickle", sc=["2A"]), #, "2B", "2C", "3A", "3B"]),
		# expand('results/simulations/sim_2pop_{rep}.trees', rep=range(100)),
		# Simple 2 pops
		# expand('results/simulations/sim_2pop_{ver}.trees', ver=[1, 2]),
		# 'results/simulations/sim_2pop_simple.trees',
		# 'results/simulations/sim_2pop_const_pulse.trees',
		# 'results/simulations/sim_2pop_no_pulse.trees',
		# Simple 3 pops
		# 'results/simulations/sim_3pop_simple.trees',
		rules.sim_msprime_simple_3pop_Patterson_like.output,
		# Europe
		# expand('results/figures/sim_eu_{variant}_admix.png', variant=['A', 'B']),

rule prepare_scenarios:
	output:
		expand("resources/scenario_{sc}.yaml", sc=["2A", "2B", "2C", "3A", "3B"]),
	conda:
		"envs/popgensim.yaml"
	script:
		"scripts/scenarios.py"
		